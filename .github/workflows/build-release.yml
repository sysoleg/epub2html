name: Build and Release

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set build environment variables
        shell: bash
        run: |
          OS_NAME=$(echo ${{ matrix.os }} | sed -e 's/-latest//' -e 's/ubuntu/linux/')
          BINARY_NAME="epub2html"
          ARCHIVE_BASE="${BINARY_NAME}-${OS_NAME}"
          ARCHIVE_EXT="tar.gz"

          if [ "$OS_NAME" == "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
            ARCHIVE_EXT="zip"
          fi

          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=$ARCHIVE_BASE.$ARCHIVE_EXT" >> $GITHUB_ENV

      - name: Build
        run: go build -o ${{ env.BINARY_NAME }}

      - name: Archive binary
        shell: bash
        run: |
          if [[ ${{ env.ARCHIVE_NAME }} == *.tar.gz ]]; then
            tar -czf ${{ env.ARCHIVE_NAME }} ${{ env.BINARY_NAME }}
          elif [[ ${{ env.ARCHIVE_NAME }} == *.zip ]]; then
            7z a ${{ env.ARCHIVE_NAME }} ${{ env.BINARY_NAME }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: ${{ env.ARCHIVE_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
